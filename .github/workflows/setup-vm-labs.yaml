name: "Setup vm lab"
on:
  workflow_dispatch:
    inputs:
      TFACTION:
        description: "Terraform Action"
        default: "apply"
        required: true
        type: choice
        options:
         - "apply"
         - "destroy"
      VMCOUNT:
         description: "Virtual Machine counts"
         default: "2"
         required: true
         type: string
      PUBLIC:
         description: "Enable public ip for VM?"
         type: boolean
         default: true
      location:
         description: "Location for the resources"
         type: string
         default: "eastus"
      rgname:
         description: "ResourceGroup name"
         type: string
         default: "krlab"
         
permissions:
  contents: 'read'
  id-token: 'write'
env:
  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TF_VAR_VMCOUNT: ${{ inputs.VMCOUNT }}
  TF_VAR_PUBLIC: ${{ inputs.PUBLIC }}
  TF_VAR_location: ${{ inputs.location }}
  TF_VAR_rgname: ${{ inputs.rgname }}
jobs:
  vmsetup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    name: 'labsetup'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform  init
        working-directory: terraform/rgvnetvm

    # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform  plan -input=false
        working-directory: terraform/rgvnetvm

      - name: Terraform Apply
        if: ${{ github.event.inputs.TFACTION == 'apply' }}
        run: terraform  apply --auto-approve -input=false
        working-directory: terraform/rgvnetvm
      - name: Terraform Destroy
        if: ${{ github.event.inputs.TFACTION == 'destroy' }}
        run: terraform destroy --auto-approve -input=false
        working-directory: terraform/rgvnetvm
